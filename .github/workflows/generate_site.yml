name: Deploy GitHub Pages with Dynamic Content

on:
  push:
    branches:
      - main # Ganti dengan branch utama Anda
  workflow_dispatch: # Mengizinkan trigger manual

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    # --- TAMBAHKAN BAGIAN INI ---
    permissions:
      contents: write # Diperlukan untuk checkout dan upload artifact
      pages: write    # Diperlukan untuk deployment GitHub Pages
      id-token: write # Diperlukan oleh actions/deploy-pages@v3 untuk OIDC
    # --- AKHIR TAMBAHAN ---

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9' # Pastikan versi Python sesuai dengan kebutuhan Anda

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests markdown # Pastikan semua dependensi yang Anda gunakan terinstal

    # --- Lakukan langkah ini SEBELUM menjalankan skrip Python ---
    # Buat folder _site dan salin semua file statis Anda ke dalamnya
    - name: Prepare _site directory
      run: |
        mkdir -p _site
        cp index_template.html _site/index_template.html # Salin template utama
        cp post_template.html _site/post_template.html # Salin template post
        cp label_template.html _site/label_template.html # Salin template label

        # Salin file-file kustom Anda jika ada
        [ -f custom_head.html ] && cp custom_head.html _site/custom_head.html
        [ -f custom_js.html ] && cp custom_js.html _site/custom_js.html
        [ -f custom_header.html ] && cp custom_header.html _site/custom_header.html
        [ -f custom_sidebar.html ] && cp custom_sidebar.html _site/custom_sidebar.html
        [ -f custom_footer.html ] && cp custom_footer.html _site/custom_footer.html

        # Jika Anda memiliki folder CSS/JS terpisah yang tidak digenerate Python, salin juga
        # cp -r css/ _site/css/
        # cp -r js/ _site/js/

        # Jika ada file lain di root yang perlu di-deploy, salin juga
        # cp favicon.ico _site/favicon.ico
        
        # PERHATIAN: Pastikan file `index.html` (di root) di-generate oleh skrip Python Anda
        # ke dalam `_site/index.html` dan bukan disalin secara manual di sini,
        # KECUALI jika `index.html` di root adalah template statis yang tidak berubah.
        # Dari kode Python Anda, `index.html` memang digenerate, jadi tidak perlu disalin manual di sini.

    - name: Run Python script to generate content
      env:
        # Pastikan API_KEY dan BLOG_ID diset sebagai GitHub Secrets
        BLOGGER_API_KEY: ${{ secrets.BLOGGER_API_KEY }}
        BLOG_ID: ${{ secrets.BLOG_ID }}
      run: python generate_site.py # Ganti dengan nama skrip Python Anda

    - name: Setup Pages
      uses: actions/configure-pages@v3

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: '_site' # Unggah seluruh isi folder _site

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v3
